
[vmware]
#
# Related options:
# Following options must be set in order to launch VMware-based
# virtual machines.
#
# * compute_driver: Must use vmwareapi.VMwareVCDriver.
# * vmware.host_username
# * vmware.host_password
# * vmware.cluster_name

#
# From nova.conf
#

#
# This option specifies the physical ethernet adapter name for VLAN
# networking.
#
# Set the vlan_interface configuration option to match the ESX host
# interface that handles VLAN-tagged VM traffic.
#
# Possible values:
#
# * Any valid string representing VLAN interface name
#  (string value)
#vlan_interface = vmnic0
{%- if _data.vlan_interface is defined %}
vlan_interface = {{ _data.vlan_interface }}
{%- endif %}

#
# This option should be configured only when using the NSX-MH Neutron
# plugin. This is the name of the integration bridge on the ESXi server
# or host. This should not be set for any other Neutron plugin. Hence
# the default value is not set.
#
# Possible values:
#
# * Any valid string representing the name of the integration bridge
#  (string value)
#integration_bridge = <None>
{%- if _data.integration_bridge is defined %}
integration_bridge = {{ _data.integration_bridge }}
{%- endif %}

#
# Set this value if affected by an increased network latency causing
# repeated characters when typing in a remote console.
#  (integer value)
# Minimum value: 0
#console_delay_seconds = <None>
{%- if _data.console_delay_seconds is defined %}
console_delay_seconds = {{ _data.console_delay_seconds }}
{%- endif %}

#
# Identifies the remote system where the serial port traffic will
# be sent.
#
# This option adds a virtual serial port which sends console output to
# a configurable service URI. At the service URI address there will be
# virtual serial port concentrator that will collect console logs.
# If this is not set, no serial ports will be added to the created VMs.
#
# Possible values:
#
# * Any valid URI
#  (string value)
#serial_port_service_uri = <None>
{%- if _data.serial_port_service_uri is defined %}
serial_port_service_uri = {{ _data.serial_port_service_uri }}
{%- endif %}

#
# Identifies a proxy service that provides network access to the
# serial_port_service_uri.
#
# Possible values:
#
# * Any valid URI (The scheme is 'telnet' or 'telnets'.)
#
# Related options:
# This option is ignored if serial_port_service_uri is not specified.
# * serial_port_service_uri
#  (uri value)
#serial_port_proxy_uri = <None>
{%- if _data.serial_port_proxy_uri is defined %}
serial_port_proxy_uri = {{ _data.serial_port_proxy_uri }}
{%- endif %}

# Specifies the directory where the Virtual Serial Port Concentrator is
# storing console log files. It should match the 'serial_log_dir' config
# value of VSPC.
#  (string value)
#serial_log_dir = /opt/vmware/vspc
{%- if _data.serial_port_proxy_uri is defined %}
serial_port_proxy_uri = {{ _data.serial_port_proxy_uri }}
{%- endif %}


#
# Hostname or IP address for connection to VMware vCenter host. (unknown value)
#host_ip = <None>
host_ip = {{ _data.host_ip }}

# Port for connection to VMware vCenter host. (port value)
# Minimum value: 0
# Maximum value: 65535
#host_port = 443
{%- if _data.host_port is defined %}
host_port = {{ _data.host_port }}
{%- endif %}

# Username for connection to VMware vCenter host. (string value)
#host_username = <None>
host_username = {{ _data.host_username }}

# Password for connection to VMware vCenter host. (string value)
#host_password = <None>
host_password = {{ _data.host_password }}

#
# Specifies the CA bundle file to be used in verifying the vCenter
# server certificate.
#  (string value)
#ca_file = <None>
{%- if _data.cacert_file is defined %}
ca_file = {{ _data.cacert_file }}
{%- endif %}

#
# If true, the vCenter server certificate is not verified. If false,
# then the default CA truststore is used for verification.
#
# Related options:
# * ca_file: This option is ignored if "ca_file" is set.
#  (boolean value)
#insecure = false
{%- if _data.insecure is defined %}
insecure = {{ _data.insecure }}
{%- endif %}

# Name of a VMware Cluster ComputeResource. (string value)
#cluster_name = <None>
cluster_name = {{ _data.cluster_name }}

#
# Regular expression pattern to match the name of datastore.
#
# The datastore_regex setting specifies the datastores to use with
# Compute. For example, datastore_regex="nas.*" selects all the data
# stores that have a name starting with "nas".
#
# NOTE: If no regex is given, it just picks the datastore with the
# most freespace.
#
# Possible values:
#
# * Any matching regular expression to a datastore must be given
#  (string value)
#datastore_regex = <None>
{%- if _data.datastore_regex is defined %}
datastore_regex = {{ _data.datastore_regex }}
{%- endif %}

#
# Time interval in seconds to poll remote tasks invoked on
# VMware VC server.
#  (floating point value)
#task_poll_interval = 0.5
{%- if _data.task_poll_interval is defined %}
task_poll_interval = {{ _data.task_poll_interval }}
{%- endif %}


#
# Number of times VMware vCenter server API must be retried on connection
# failures, e.g. socket error, etc.
#  (integer value)
# Minimum value: 0
#api_retry_count = 10
{%- if _data.api_retry_count is defined %}
api_retry_count = {{ _data.api_retry_count }}
{%- endif %}

#
# This option specifies VNC starting port.
#
# Every VM created by ESX host has an option of enabling VNC client
# for remote connection. Above option 'vnc_port' helps you to set
# default starting port for the VNC client.
#
# Possible values:
#
# * Any valid port number within 5900 -(5900 + vnc_port_total)
#
# Related options:
# Below options should be set to enable VNC client.
# * vnc.enabled = True
# * vnc_port_total
#  (port value)
# Minimum value: 0
# Maximum value: 65535
#vnc_port = 5900
{%- if _data.vnc_port is defined %}
vnc_port = {{ _data.vnc_port }}
{%- endif %}

#
# Total number of VNC ports.
#  (integer value)
# Minimum value: 0
#vnc_port_total = 10000
{%- if _data.vnc_port_total is defined %}
vnc_port_total = {{ _data.vnc_port_total }}
{%- endif %}

#
# This option enables/disables the use of linked clone.
#
# The ESX hypervisor requires a copy of the VMDK file in order to boot
# up a virtual machine. The compute driver must download the VMDK via
# HTTP from the OpenStack Image service to a datastore that is visible
# to the hypervisor and cache it. Subsequent virtual machines that need
# the VMDK use the cached version and don't have to copy the file again
# from the OpenStack Image service.
#
# If set to false, even with a cached VMDK, there is still a copy
# operation from the cache location to the hypervisor file directory
# in the shared datastore. If set to true, the above copy operation
# is avoided as it creates copy of the virtual machine that shares
# virtual disks with its parent VM.
#  (boolean value)
#use_linked_clone = true
{%- if _data.use_linked_clone is defined %}
use_linked_clone = {{ _data.use_linked_clone }}
{%- endif %}

# This option sets the http connection pool size
#
# The connection pool size is the maximum number of connections from nova to
# vSphere.  It should only be increased if there are warnings indicating that
# the connection pool is full, otherwise, the default should suffice.
#  (integer value)
# Minimum value: 10
#connection_pool_size = 10
{%- if _data.connection_pool_size is defined %}
connection_pool_size = {{ _data.connection_pool_size }}
{%- endif %}

#
# This option enables or disables storage policy based placement
# of instances.
#
# Related options:
#
# * pbm_default_policy
#  (boolean value)
#pbm_enabled = false
{%- if _data.pbm_enabled is defined %}
pbm_enabled = {{ _data.pbm_enabled }}
{%- endif %}

#
# This option specifies the PBM service WSDL file location URL.
#
# Setting this will disable storage policy based placement
# of instances.
#
# Possible values:
#
# * Any valid file path
#   e.g file:///opt/SDK/spbm/wsdl/pbmService.wsdl
#  (string value)
#pbm_wsdl_location = <None>
{%- if _data.pbm_wsdl_location is defined %}
pbm_wsdl_location = {{ _data.pbm_wsdl_location }}
{%- endif %}

#
# This option specifies the default policy to be used.
#
# If pbm_enabled is set and there is no defined storage policy for the
# specific request, then this policy will be used.
#
# Possible values:
#
# * Any valid storage policy such as VSAN default storage policy
#
# Related options:
#
# * pbm_enabled
#  (string value)
#pbm_default_policy = <None>
{%- if _data.pbm_default_policy is defined %}
pbm_default_policy = {{ _data.pbm_default_policy }}
{%- endif %}

#
# This option specifies the limit on the maximum number of objects to
# return in a single result.
#
# A positive value will cause the operation to suspend the retrieval
# when the count of objects reaches the specified limit. The server may
# still limit the count to something less than the configured value.
# Any remaining objects may be retrieved with additional requests.
#  (integer value)
# Minimum value: 0
#maximum_objects = 100
{%- if _data.maximum_objects is defined %}
maximum_objects = {{ _data.maximum_objects }}
{%- endif %}

#
# This option adds a prefix to the folder where cached images are stored
#
# This is not the full path - just a folder prefix. This should only be
# used when a datastore cache is shared between compute nodes.
#
# Note: This should only be used when the compute nodes are running on same
# host or they have a shared file system.
#
# Possible values:
#
# * Any string representing the cache prefix to the folder
#  (string value)
#cache_prefix = <None>
{%- if _data.cache_prefix is defined %}
cache_prefix = {{ _data.cache_prefix }}
{%- endif %}
