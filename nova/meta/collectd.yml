{%- if pillar.nova.compute is defined %}
local_plugin:
  nova_compute_libvirt:
    plugin: libvirt
    template: nova/files/collectd_libvirt.conf
  nova_libvirt_check:
    plugin: python
    template: nova/files/collectd_libvirt_check.conf
{%- endif %}
{%- if pillar.nova.controller is defined or pillar.nova.conductor is defined or pillar.nova.api is defined %}
{% from "nova/map.jinja" import cfg,controller,api,conductor with context %}
{%- if controller.get('enabled', False) or api.get('enabled', False) or conductor.get('enabled', False) %}
local_plugin:
  collectd_check_local_endpoint:
    endpoint:
      nova-api:
        expected_code: 200
        url: "http://{{ cfg.bind.private_address|replace('0.0.0.0', '127.0.0.1') }}:8774/"
remote_plugin:
  nova_resources:
    plugin: python
    template: nova/files/collectd_openstack_nova.conf
    url: "http://{{ cfg.identity.host }}:{{ cfg.identity.port }}/v{% if cfg.identity.get('api_version', 2)|int == 2 %}2.0{% else %}3{% endif %}"
    project: {{ cfg.identity.tenant }}
    user: {{ cfg.identity.user }}
    password: {{ cfg.identity.password }}
    region: {{ cfg.identity.region }}
  nova_services:
    plugin: python
    template: nova/files/collectd_openstack_nova_services.conf
    url: "http://{{ cfg.identity.host }}:{{ cfg.identity.port }}/v{% if cfg.identity.get('api_version', 2)|int == 2 %}2.0{% else %}3{% endif %}"
    project: {{ cfg.identity.tenant }}
    user: {{ cfg.identity.user }}
    password: {{ cfg.identity.password }}
    region: {{ cfg.identity.region }}
  nova_hypervisor_stats:
    plugin: python
    template: nova/files/collectd_hypervisor_stats.conf
    url: "http://{{ cfg.identity.host }}:{{ cfg.identity.port }}/v{% if cfg.identity.get('api_version', 2)|int == 2 %}2.0{% else %}3{% endif %}"
    project: {{ cfg.identity.tenant }}
    user: {{ cfg.identity.user }}
    password: {{ cfg.identity.password }}
    region: {{ cfg.identity.region }}
    cpu_allocation_ratio: {{ cfg.cpu_allocation_ratio }}
{%- endif %}
{%- endif %}
